#BlueJ class context
comment0.target=Player
comment0.text=\n\ The\ Player\ class\ creates\ a\ Player\ object\ that\ represents\ a\ general\ player\n\n\ @main\ authors\ (Jane\ Yang,\ Yining\ Li)\n\ @version\ 12/13/18\n
comment1.params=num
comment1.target=Player(int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Player\n
comment10.params=x\ y
comment10.target=int\ getVertexIndex(int,\ int)
comment10.text=\n\ getVertexIndex\n\ @param\ int\ x\:\ the\ x\ identifier\ of\ the\ given\ vertex\n\ @param\ int\ y\:\ the\ y\ identifier\ of\ the\ given\ vertex\n\ @return\ int\ resultIndex\:\ the\ index\ of\ the\ given\ vertex\ in\ the\ vertices\ vector\n
comment11.params=i
comment11.target=Vertex\ getVertex(int)
comment11.text=\n\ getVertex\n\ @param\ int\ i\:\ the\ index\ of\ the\ vertex\ to\ be\ found\ in\ the\ vector\n\ @return\:\ the\ Vertex\n
comment12.params=vertex1\ vertex2
comment12.target=void\ addEdge(Vertex,\ Vertex)
comment12.text=\n\ addEdge\n\ @param\ Vertex\ vertex1\:\ the\ first\ Vertex\n\ @param\ Vertex\ vertex2\:\ the\ second\ Vertex\n
comment13.params=start\ end
comment13.target=boolean\ pathDFS(Vertex,\ Vertex)
comment13.text=\n\ pathDFS\n\ check\ whether\ a\ path\ exists\ between\ the\ start\ Vertex\ and\ the\ end\ Vertex\n\ @param\ the\ start\ vertex\n\ @param\ the\ end\ vertex\ \n\ @return\ boolean\:\ whether\ a\ path\ has\ been\ found\n
comment14.params=target\ c
comment14.target=void\ setConnected(Vertex,\ boolean)
comment14.text=\n\ setConnected\n\ marks\ a\ vertex\ as\ connected\ or\ disconnected\n\ @param\ whether\ the\ vertex\ has\ been\ connected\ \n\ @param\ the\ target\ vertex\ \n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\n\ toString\n\ @return\ a\ formatted\ String\ representation\ of\ Player\n
comment2.params=target
comment2.target=Vertex\ getLeftNeighbor(Vertex)
comment2.text=\n\ getLeftNeighbor\n\ @param\ Vertex\ target\:\ the\ Vertex\ whose\ left\ neighbor\ is\ to\ be\ found\n\ @return\ the\ left\ neighbor\ Vertex\ of\ the\ target\n
comment3.params=target
comment3.target=Vertex\ getRightNeighbor(Vertex)
comment3.text=\n\ getRighttNeighbor\n\ @param\ Vertex\ target\:\ the\ Vertex\ whose\ right\ neighbor\ is\ to\ be\ found\n\ @return\ the\ right\ neighbor\ Vertex\ of\ the\ target\n
comment4.params=target
comment4.target=Vertex\ getTopNeighbor(Vertex)
comment4.text=\n\ getTopNeighbor\n\ @param\ Vertex\ target\:\ the\ Vertex\ whose\ top\ neighbor\ is\ to\ be\ found\n\ @return\ the\ top\ neighbor\ Vertex\ of\ the\ target\n
comment5.params=target
comment5.target=Vertex\ getBottomNeighbor(Vertex)
comment5.text=\n\ getBottomNeighbor\n\ @param\ Vertex\ target\:\ the\ Vertex\ whose\ bottom\ neighbor\ is\ to\ be\ found\n\ @return\ the\ bottom\ neighbor\ Vertex\ of\ the\ target\n
comment6.params=
comment6.target=java.lang.String\ getName()
comment6.text=\n\ The\ followings\ are\ getter\ methods\ for\ instance\ variables\n
comment7.params=
comment7.target=int\ getNum()
comment8.params=
comment8.target=AdjListsGraph\ getBoard()
comment9.params=
comment9.target=int\ getNumVertices()
numComments=16
